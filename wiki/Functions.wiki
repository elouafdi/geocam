#summary An alphabetical list of the functions in the Geocam Project
#labels Featured

     <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, [Functions#run R], [Functions#run S], T, U, V, W, X, Y, Z>

= `run` =

  == Keywords ==
  flow, curvature, stepsize, precision, accuracy, approximator

  == Authors ==
   * Joseph Thomas
   * Alex Henniges

  == Introduction ==
  The `run` function of the [CurvatureFlow Approximator] class runs a system of differential equations representing a curvature flow for either a number of steps or until the values are within a desired accuracy and precision. The system to use and how steps are performed is given in the constructor of the approximator. The type of run is based on the parameters given.


  == Subsidiaries ==
  Functions: `step`, `recordState`, `getLatest`, `isPrecise`, `isAccurate`

  Global Variables: `radii`, `curvatures`

  Local Variables: `int numsteps`, `double stepsize`, `double precision`, `double accuracy`

  == Description ==
  If the `run` function is given a number of steps, it will call its step function that number of times. In between steps, the `run` function will record the current state of any values that have been requested to be recorded (this is specified in the constructor).

  If the `run` function is given a precision and accuracy, it will continue to call its step function until the desired quantities (curvature in two dimensions and curvature divide by radius in three dimensions) have converged within the precision and accuracy bounds. Precision is defined to be the difference between subsequent values of a quantity. Therefore, precision is a measure of how much a value is changing. Accuracy is defined to be the difference in value between quantities. Therefore, accuracy is a measure of how close values are to each other. In between steps, the `run` function will record the current state of any values that have been requested to be recorded (this is specified in the constructor).	

  The `run` function and the overarching [CurvatureFlow Approximator] class exists as an improvement over the curvature flows of earlier versions of the Geocam project. The `run` function provides the skeleton that is similar for all types of curvature flows. Beyond the constructor, this should be the only thing a user calls from the [CurvatureFlow Approximator] class.

  == Practicum ==
  Format:
{{{
run(int numsteps, double stepsize)	
run(double precision, double accuracy, double stepsize)
}}}

  Example:
{{{
// Create an approximator that uses the Euler method on a Yamabe flow.
Approximator *app = new EulerApprox(Yamabe);

// Run a Yamabe flow for 300 steps with a stepsize of 0.01.
app->run(300, 0.01);
// Run with precision and accuracy bounds of 0.0001 and a stepsize of 0.01
app->run(0.0001, 0.0001, 0.01);
}}}

  == Limitations ==
  The `run` function is limited in the systems of differential equations that it can run. It is designed to run with curvature flows and, when precision and accuracy are used, expects the values to converge. If a precision/accuracy run is performed on a flow that does not converge, the `run` function will not stop. If a new curvature flow is created whose convergence is not the usual (as in curvature divided by radius in Yamabe flow) then the `run` function will have to be modified to accommodate for this.

  == Revisions ==
   * Version 1.0 5/1/09: Initial `run` function uploaded to the code.
   * Version 1.1 6/3/09: `run` function modified to work with new Geometry structure.

  == Testing ==
  The function was tested by performing two and three dimensional flows on familiar triangulations. The start and end values for radii and curvature was then compared with our expected values. The expected values were obtained from the earlier curvature flows we had (see [Functions#Description Description]). We also checked that the end values were within the precision and accuracy bounds when they were in effect. 

  == Future Work ==
  No future work is planned at this time, though possible changes would include providing for more general systems to be able to run. This would involve changing the way precision and accuracy are determined as well as what values are recorded.

= `step` =
  
  == Keywords ==

  == Authors == 

  == Introduction == 

  == Subsidiaries == 

  == Description ==

  == Practicum ==

  == Limitations ==

  == Revisions ==

  == Testing ==

  == Future Work ==

<wiki:toc max_depth="2" />